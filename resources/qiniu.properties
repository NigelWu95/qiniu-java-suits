# list bucket 操作的 parameters，ak、sk 为账号的密钥对字符串，bucket 为空间名称，result-path 为保存列举和处理结果的相对路径，max-threads
# 为最大线程数，version 使用的列举接口版本，level 为列举并发级别（1 或 2），end-file 为是否使用结束文件名做分段标志，unit-len 为每次列举请求列
# 举的文件个数，prefix 表示只列举某个前缀。
ak=
sk=
bucket=temp
result-path=../result
max-threads=100
version=2
level=1
end-file=true
unit-len=10000
prefix=
anti-prefix=
# 进行列举时的过滤条件，f-key-prefix 表示过滤的文件名前缀，f-key-suffix 表示过滤的文件名后缀，f-key-regex 表示按正则表达式过滤文件名，f-mime
# 表示过滤文件的 mime 类型，f-type 表示过滤的文件类型，为 0 或 1。date、time 为判断是否进行 process 操作的时间点。direction 0 表示向时间点
# 以前，1 表示向时间点以后。过滤条件中，prefix、suffix、regex、mime 可以为列表形式，如 param1,param2,param3。prefix、suffix、regex 三者
# 为针对文件名 key 的过滤条件，(filter(prefix) || filter(suffix)) && filter(regex) 组成 key 的过滤结果 true/false，结合其他的过滤条件
# 时为 &&（与）的关系得到最终过滤结果。【设置该过滤条件会从全部列举结果中过滤出对应文件列表单独保存成结果 list_other<index>.txt】
f-key-prefix=
f-key-suffix=
f-key-regex=
f-mime=
f-type=
f-date=2018-08-01
f-time=00:00:00
f-direction=1
# 反向过滤条件
anti-f-key-prefix=
anti-f-key-suffix=
anti-f-key-regex=
anti-f-mime=

# 对每条记录进行什么操作，目前支持 changeLifecycle(deleteAfterDays)/changeType/changeStatus/fileCopy, process-batch 表示是否使用
# batch（批量请求）方式处理
process=copy
process-batch=true
# type 操作的 parameter，1 表示低频存储，0 表示标准存储
type=1
# status 操作的 parameter，1 表示文件禁用，0 表示文件启用
status=0
# lifecycle 操作的 parameter，为 0 时表示永久的生命周期
days=0
# file copy 操作的 parameters，复制操作前提是两个空间在同一账号下，或者是被复制的空间为授权可读权限的空间，access-key 和
# secret-key 为目标空间的 ak、sk，from 和 to 表示源和目标 bucket 名称，keep-key 为是否保留原文件名，add-prefix 为附加
# 的目标文件前缀。
access-key=
secret-key=
from=bucket1
to=bucket2
keep-key=true
add-prefix=video/